{"version":3,"sources":["components/Skill.tsx","components/ExampleOfWork.tsx","data/Skills.ts","data/WorkExamples.ts","temp/social-network-preview-img.png","temp/todolist-preview-img.png","temp/cards-learning-preview.png","common/backgroundOptions.ts","api/api.ts","components/ContactsForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Skill","skillImg","skillInfo","skillName","skillNameColor","skillDocumentationLink","fadeDirection","SkillContainer","elevation","onClick","url","newWindow","window","open","opener","openInNewTab","direction","src","style","width","height","alt","Typography","variant","color","IconButton","size","styled","Paper","ExampleOfWork","previewImage","projectName","projectDescription","gitHubURL","React","useState","setOpen","handleClose","ExampleOfWorkContainer","title","Dialog","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","DialogContentText","overflowX","DialogActions","Button","href","target","skills","workExamples","particleOpt","background","value","fullScreen","enable","zIndex","fpsLimit","interactivity","events","mode","onHover","resize","modes","bubble","distance","duration","opacity","push","quantity","repulse","particles","links","collisions","move","outMode","random","speed","straight","number","density","value_area","shape","type","detectRetina","instance","axios","create","baseURL","offerAPI","sendOffer","data","a","post","response","ContactsFrom","formik","useFormik","initialValues","name","email","message","validate","values","errors","test","onSubmit","console","log","then","alert","FormContainer","handleSubmit","TextField","id","onChange","handleChange","error","helperText","label","multiline","rows","endIcon","App","isDarkMode","setDarkMode","mainRef","useRef","skillsRef","worksRef","contactsRef","scrollTo","ref","current","scrollIntoView","behavior","block","ThemeProvider","theme","darkTheme","lightTheme","CssBaseline","className","position","top","bottom","right","left","params","RootContentContainer","AppBar","CustomToolbar","HeaderButtonContainer","MyInfoContainer","Grid","item","options","deleteSpeed","wrapperClassName","cursorClassName","onInit","typewriter","typeString","changeDelay","pauseFor","deleteChars","start","CustomAvatar","SkillsContainer","fontFamily","Skills","map","s","i","MyWorksContainer","WorksExamples","e","ContactsContainer","RootPaperContactsContainer","fontWeight","fontSize","margin","display","flexDirection","alignItems","SocialContactsContainer","aria-label","container","ContactsForm","FooterContainer","ModeButton","Tooltip","placement","createTheme","palette","primary","main","secondary","Toolbar","Avatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa6bac65.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport {IconButton, Paper, styled, Typography} from \"@mui/material\";\r\nimport {SkillType} from \"../data/Skills\";\r\nimport {Fade} from \"react-awesome-reveal\";\r\n\r\n\r\n\r\nfunction Skill({skillImg, skillInfo, skillName, skillNameColor, skillDocumentationLink, fadeDirection}: SkillType) {\r\n\r\n    const openInNewTab = (url: string): void => {\r\n        const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\r\n        if (newWindow) newWindow.opener = null\r\n    }\r\n\r\n    return (\r\n        <SkillContainer elevation={5} onClick={() => openInNewTab(skillDocumentationLink)}>\r\n            <Fade direction={fadeDirection}>\r\n            <img src={skillImg} style={{width:'100px', height:'100px'}}  alt=\"logo\"/>\r\n            <Typography variant={\"h5\"} color={skillNameColor}>\r\n                {skillName}\r\n            </Typography>\r\n            <Typography variant={\"body1\"}>\r\n                {skillInfo}\r\n            </Typography>\r\n            <IconButton size={\"small\"} >Learn more</IconButton>\r\n            </Fade>\r\n        </SkillContainer>\r\n    );\r\n}\r\n\r\nexport default Skill;\r\n\r\nexport const SkillContainer = styled(Paper)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 30%;\r\n  min-height: 420px;\r\n  padding: 30px 20px 0 20px;\r\n\r\n  .MuiTypography-root {\r\n    padding: 20px;\r\n    text-align: center;\r\n  }\r\n  .MuiIconButton-root {\r\n    padding-bottom: 20px;\r\n    color: gray;\r\n  }\r\n  .MuiIconButton-root::after {\r\n    margin-left: 5px;\r\n    font-size: 20px;\r\n    content: \"→\";\r\n  }\r\n\r\n  .scale-up-hor-left {\r\n    -webkit-animation: scale-up-hor-left 0.2s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;\r\n    animation: scale-up-hor-left 0.2s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;\r\n  }\r\n  @-webkit-keyframes scale-up-hor-left {\r\n    0% {\r\n      -webkit-transform: scaleX(0.4);\r\n      transform: scaleX(0.4);\r\n      -webkit-transform-origin: 0% 0%;\r\n      transform-origin: 0% 0%;\r\n    }\r\n    100% {\r\n      -webkit-transform: scaleX(1);\r\n      transform: scaleX(1);\r\n      -webkit-transform-origin: 0% 0%;\r\n      transform-origin: 0% 0%;\r\n    }\r\n  }\r\n  @keyframes scale-up-hor-left {\r\n    0% {\r\n      -webkit-transform: scaleX(0.4);\r\n      transform: scaleX(0.4);\r\n      -webkit-transform-origin: 0% 0%;\r\n      transform-origin: 0% 0%;\r\n    }\r\n    100% {\r\n      -webkit-transform: scaleX(2.5);\r\n      transform: scaleX(2.5);\r\n      -webkit-transform-origin: 0% 0%;\r\n      transform-origin: 0% 0%;\r\n    }\r\n  }\r\n  \r\n  :hover{\r\n    cursor: pointer;\r\n    .MuiIconButton-root {\r\n      color: red;\r\n      background: none;\r\n      ::after{\r\n        content: \"\\\\2192\";\r\n        margin-left: 5px;\r\n        animation: scale-up-hor-left 0.4s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;\r\n      }\r\n    }\r\n    \r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    width: 95%;\r\n    margin: auto auto 20px;\r\n    min-height: 300px;\r\n  }\r\n\r\n`\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Paper,\r\n    styled, Tooltip,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport {ExampleProjectType} from \"../data/WorkExamples\";\r\nimport {Flip} from \"react-awesome-reveal\";\r\n\r\n\r\nfunction ExampleOfWork({previewImage, projectName, projectDescription, gitHubURL}: ExampleProjectType) {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => setOpen(true);\r\n\r\n    const handleClose = () => setOpen(false);\r\n\r\n    return (\r\n        <ExampleOfWorkContainer elevation={5}>\r\n            <Flip direction={\"horizontal\"}>\r\n                <img src={previewImage} title={'Click to open preview'} onClick={handleClickOpen}/>\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    fullWidth\r\n                    maxWidth={\"xl\"}\r\n                >\r\n                    <DialogTitle>\r\n                        {projectName}\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            <img src={previewImage} style={{width: '77vw', overflowX: 'hidden'}}/>\r\n                        </DialogContentText>\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color={\"secondary\"}>close</Button>\r\n                        <Button onClick={handleClose} color={\"success\"} href={gitHubURL} target=\"_blank\">Try\r\n                            online</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Typography variant={\"h5\"}>\r\n                    {projectName}\r\n                </Typography>\r\n                <Typography variant={\"subtitle2\"}>\r\n                    {projectDescription}\r\n                </Typography>\r\n            </Flip>\r\n        </ExampleOfWorkContainer>\r\n    );\r\n}\r\n\r\nexport default ExampleOfWork;\r\n\r\nconst ExampleOfWorkContainer = styled(Paper)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  text-align: center;\r\n  width: 45%;\r\n  height: 50%;\r\n  padding: 40px;\r\n  margin: 20px;\r\n\r\n\r\n  img {\r\n    width: 500px;\r\n    border: 1px solid gray;\r\n    transition: 0.5s;\r\n\r\n    :hover {\r\n      opacity: 0.3;\r\n      cursor: pointer;\r\n      transform: scale(1.2);\r\n    }\r\n  }\r\n\r\n\r\n  .MuiTypography-h5 {\r\n    padding-top: 20px;\r\n  }\r\n\r\n  & :hover {\r\n    & + .MuiTypography-body2 {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 95%;\r\n    margin: auto auto 20px;\r\n    img {\r\n      width: 400px;\r\n    }\r\n  }\r\n  @media (max-width: 1024px) {\r\n    img {\r\n      width: 250px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1440px) {\r\n    img {\r\n      width: 300px;\r\n    }\r\n  }\r\n\r\n`\r\n\r\n\r\n","export type SkillType = {\r\n    skillName: string\r\n    skillNameColor: string\r\n    skillInfo: string\r\n    skillImg: string\r\n    skillDocumentationLink: string\r\n    fadeDirection: \"bottom-left\" | \"bottom-right\" | \"down\" | \"left\" | \"right\" | \"top-left\" | \"top-right\" | \"up\";\r\n}\r\nexport const skills = [\r\n    {\r\n        skillName: 'React',\r\n        skillNameColor: '#61DBFB',\r\n        skillInfo: 'React is a declarative, efficient, and flexible JavaScript library for building user interfaces. ',\r\n        skillImg: 'https://img.icons8.com/color/96/000000/react-native.png',\r\n        skillDocumentationLink: 'https://reactjs.org/',\r\n        fadeDirection: 'left',\r\n    },\r\n    {\r\n        skillName: 'Redux',\r\n        skillNameColor: '#764abc',\r\n        skillInfo: 'Redux helps you write applications that behave consistently, run in different environments (client, server, and native), and are easy to test.',\r\n        skillImg: 'https://img.icons8.com/color/96/000000/redux.png',\r\n        skillDocumentationLink: 'https://redux.js.org/',\r\n        fadeDirection: 'up',\r\n    },\r\n    {\r\n        skillName: 'TypeScript',\r\n        skillNameColor: '#007acc',\r\n        skillInfo: 'TypeScript is a strongly typed programming language that builds on JavaScript, giving you better tooling at any scale.',\r\n        skillImg: 'https://img.icons8.com/color/96/000000/typescript.png',\r\n        skillDocumentationLink: 'https://www.typescriptlang.org/',\r\n        fadeDirection: \"right\",\r\n    },\r\n] as Array<SkillType>","import socialNetworkPreview from \"../temp/social-network-preview-img.png\";\r\nimport todolistPreview from \"../temp/todolist-preview-img.png\";\r\nimport cardsLearningPreview from \"../temp/cards-learning-preview.png\";\r\n\r\nexport type ExampleProjectType = {\r\n    previewImage: string,\r\n    projectName: string,\r\n    projectDescription: string\r\n    gitHubURL: string\r\n}\r\nexport const workExamples = [\r\n    {\r\n        previewImage: socialNetworkPreview,\r\n        projectName: 'Social network',\r\n        projectDescription: 'A social network is a website that allows people with similar interests to come together and shar information and photos',\r\n        gitHubURL: 'https://aleksandrdemidovich.github.io/social-network-mui/'\r\n    },\r\n    {\r\n        previewImage: todolistPreview,\r\n        projectName: 'Todolist',\r\n        projectDescription: 'What is a ToDo List? The definition is a simple one. It\\'s a list of tasks you need to complete, or things that you want to do.',\r\n        gitHubURL: 'https://aleksandrdemidovich.github.io/todo-list/'\r\n    },\r\n    {\r\n        previewImage: cardsLearningPreview,\r\n        projectName: 'Cards learning',\r\n        projectDescription: 'Flashcards are effective tools for both learning and studying when they’re used correctly. ' +\r\n            'Whether you’re cramming for a test or learning a new language, flashcard apps help you study smarter, not longer.',\r\n        gitHubURL: 'https://aleksandrdemidovich.github.io/friday-project/#/login'\r\n    },\r\n] as Array<ExampleProjectType>","export default __webpack_public_path__ + \"static/media/social-network-preview-img.bd1213dc.png\";","export default __webpack_public_path__ + \"static/media/todolist-preview-img.1ddb29e6.png\";","export default __webpack_public_path__ + \"static/media/cards-learning-preview.bedb0505.png\";","import {ISourceOptions} from \"tsparticles\";\r\n\r\nexport const  particleOpt: ISourceOptions ={\r\n    background: {\r\n        color: {\r\n            value: 'inherit',\r\n        },\r\n    },\r\n    fullScreen:{\r\n        enable: true,\r\n        zIndex: -1\r\n    },\r\n    fpsLimit: 60,\r\n    interactivity: {\r\n        events: {\r\n            onClick: {\r\n                enable: true,\r\n                mode: \"push\",\r\n            },\r\n            onHover: {\r\n                enable: true,\r\n                mode: \"repulse\",\r\n            },\r\n            resize: true,\r\n        },\r\n        modes: {\r\n            bubble: {\r\n                distance: 400,\r\n                duration: 2,\r\n                opacity: 0.8,\r\n                size: 40,\r\n            },\r\n            push: {\r\n                quantity: 4,\r\n            },\r\n            repulse: {\r\n                distance: 200,\r\n                duration: 0.8,\r\n            },\r\n        },\r\n    },\r\n    particles: {\r\n        color: {\r\n            value: \"#90caf9\",\r\n        },\r\n        links: {\r\n            color: \"#90caf9\",\r\n            distance: 150,\r\n            enable: true,\r\n            opacity: 0.5,\r\n            width: 1,\r\n        },\r\n        collisions: {\r\n            enable: true,\r\n        },\r\n        move: {\r\n            direction: \"none\",\r\n            enable: true,\r\n            outMode: \"bounce\",\r\n            random: false,\r\n            speed: 3,\r\n            straight: true,\r\n        },\r\n        number: {\r\n            density: {\r\n                enable: true,\r\n                value_area: 800,\r\n            },\r\n            value: 50,\r\n        },\r\n        opacity: {\r\n            value: 0.3,\r\n        },\r\n        shape: {\r\n            type: \"circle\",\r\n        },\r\n        size: {\r\n            random: true,\r\n            value: 5,\r\n        },\r\n    },\r\n    detectRetina: true,\r\n}","import axios from \"axios\";\r\n\r\n\r\nconst baseURL = 'https://smtp-server-js.herokuapp.com/';\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseURL,\r\n});\r\n\r\n\r\nexport const offerAPI = {\r\n    sendOffer: async (data: OfferDataType) => {\r\n        const response = await instance.post('sendMessage', data)\r\n        return response.data\r\n    }\r\n}\r\n\r\nexport type OfferDataType = {\r\n    name: string,\r\n    email: string,\r\n    message: string\r\n}","import React from 'react';\r\nimport '../App.css';\r\nimport {Button, styled, TextField} from \"@mui/material\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport {useFormik} from \"formik\";\r\nimport {offerAPI} from \"../api/api\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    name?: string\r\n    message?: string\r\n}\r\n\r\nfunction ContactsFrom() {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name:'',\r\n            email: '',\r\n            message:''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.name) {\r\n                errors.name = 'Required';\r\n            }\r\n\r\n            if (!values.message) {\r\n                errors.message = 'Required';\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n            console.log(values)\r\n            offerAPI.sendOffer(values).then( () =>\r\n                alert('Message was sent')\r\n            )\r\n        },\r\n    })\r\n\r\n    return (\r\n        <FormContainer onSubmit={formik.handleSubmit}>\r\n            <TextField fullWidth id=\"name\"\r\n                       onChange={formik.handleChange}\r\n                       value={formik.values.name}\r\n                       error={!!formik.errors.name}\r\n                       helperText={formik.errors.name}\r\n                       label=\"Name\"\r\n                       name=\"name\"\r\n                       variant=\"standard\" />\r\n            <TextField fullWidth id=\"email\"\r\n                       onChange={formik.handleChange}\r\n                       value={formik.values.email}\r\n                       error={!!formik.errors.email}\r\n                       helperText={formik.errors.email}\r\n                       label=\"Email\"\r\n                       name=\"email\"\r\n                       variant=\"standard\" />\r\n            <TextField\r\n                variant={\"standard\"}\r\n                fullWidth\r\n                name=\"message\"\r\n                id=\"message\"\r\n                label=\"Message\"\r\n                multiline\r\n                onChange={formik.handleChange}\r\n                value={formik.values.message}\r\n                error={!!formik.errors.message}\r\n                helperText={formik.errors.message}\r\n                rows={3}\r\n            />\r\n            <Button variant=\"contained\" type=\"submit\" size={\"large\"} endIcon={<SendIcon/>}>Send</Button>\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default ContactsFrom;\r\n\r\n\r\nconst FormContainer = styled('form')`\r\n  width: 80%;\r\n  display: flex;\r\n  margin-top: 20px;\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n\r\n  .MuiTextField-root {\r\n    margin: 20px;\r\n  }\r\n\r\n`","import React, {useState} from 'react';\nimport {\n    AppBar,\n    Avatar,\n    Button, createTheme, CssBaseline,\n    Grid,\n    IconButton,\n    PaletteOptions, Paper,\n    styled,\n    TextField, ThemeProvider,\n    Toolbar, Tooltip,\n    Typography\n} from \"@mui/material\";\nimport Typewriter from 'typewriter-effect';\nimport './App.css';\nimport SendIcon from '@mui/icons-material/Send';\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\nimport InstagramIcon from '@mui/icons-material/Instagram';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport CopyrightIcon from '@mui/icons-material/Copyright';\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport PhoneCallbackOutlinedIcon from '@mui/icons-material/PhoneCallbackOutlined';\nimport EmailOutlinedIcon from '@mui/icons-material/EmailOutlined';\nimport CheckIcon from '@mui/icons-material/Check';\nimport LocationOnOutlinedIcon from '@mui/icons-material/LocationOnOutlined';\nimport Skill from \"./components/Skill\";\nimport ExampleOfWork from \"./components/ExampleOfWork\";\nimport {skills} from \"./data/Skills\";\nimport {workExamples} from \"./data/WorkExamples\";\nimport {particleOpt} from \"./common/backgroundOptions\";\nimport Particles from \"react-tsparticles\";\nimport {Fade, Flip} from \"react-awesome-reveal\";\nimport ContactsForm from \"./components/ContactsForm\";\n\n\nfunction App() {\n    const [isDarkMode, setDarkMode] = useState(true)\n\n    const mainRef = React.useRef<HTMLDivElement>(null)\n    const skillsRef = React.useRef<HTMLDivElement>(null)\n    const worksRef = React.useRef<HTMLDivElement>(null)\n    const contactsRef = React.useRef<HTMLDivElement>(null)\n\n\n\n\n    const scrollTo = (ref: any) => {\n        if (ref && ref.current) {\n            ref.current.scrollIntoView({behavior: 'smooth', block: 'start'})\n        }\n    }\n\n    return (\n        <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\n            <CssBaseline/>\n            <div className=\"App\">\n                <Particles style={{position: \"absolute\", top: 0, bottom: 0, right: 0, left: 0}}\n                           params={particleOpt}/>\n                <RootContentContainer ref={mainRef}>\n                    <AppBar>\n                        <CustomToolbar>\n                            <HeaderButtonContainer>\n                                <Button color={\"secondary\"} onClick={() => scrollTo(mainRef)}>Home</Button>\n                                <Button color={\"secondary\"} onClick={() => scrollTo(skillsRef)}>Skills</Button>\n                                <Button color={\"secondary\"} onClick={() => scrollTo(worksRef)}>Works</Button>\n                                <Button color={\"secondary\"} onClick={() => scrollTo(contactsRef)}>Contacts</Button>\n                            </HeaderButtonContainer>\n                        </CustomToolbar>\n                    </AppBar>\n                    <MyInfoContainer>\n                        <Grid item>\n                            <Typewriter\n                                options={{deleteSpeed: 30, wrapperClassName: 'autoWrite', cursorClassName: 'autoWrite'}}\n                                onInit={(typewriter) => {\n                                    typewriter.typeString('Hello!' + '<br> ')\n                                        .changeDelay(50)\n                                        .typeString('My name is Aleksandr Demidovich')\n                                        .pauseFor(300)\n                                        .deleteChars(20)\n                                        .typeString('<strong><em>Aleksandr Demidovich</em></strong><br>')\n                                        .typeString('I am  developer')\n                                        .pauseFor(300)\n                                        .deleteChars(9)\n                                        .typeString('front-end React developer')\n                                        .start()\n                                }}/>\n                        </Grid>\n                        <Grid item>\n                            <CustomAvatar\n                                alt=\"Remy Sharp\"\n                                src=\"https://www.seoclerk.com/pics/319222-1IvI0s1421931178.png\"\n                            />\n                        </Grid>\n                    </MyInfoContainer>\n                    <SkillsContainer ref={skillsRef}>\n                        <Flip direction={\"horizontal\"}>\n                        <Typography fontFamily={\"inherit\"} variant={\"h3\"}>\n                            My skills\n                        </Typography>\n                        </Flip>\n                        <Skills>\n                            {\n                                skills.map((s, i) => {\n                                    return <Skill key={i}\n                                                  skillName={s.skillName}\n                                                  skillNameColor={s.skillNameColor}\n                                                  skillInfo={s.skillInfo}\n                                                  skillImg={s.skillImg}\n                                                  skillDocumentationLink={s.skillDocumentationLink}\n                                                  fadeDirection={s.fadeDirection}/>\n                                })\n                            }\n                        </Skills>\n                    </SkillsContainer>\n                    <MyWorksContainer ref={worksRef}>\n                        <Flip direction={\"horizontal\"}>\n                        <Typography fontFamily={\"inherit\"} variant={\"h3\"}>\n                            Examples of my work\n                        </Typography>\n                        </Flip>\n                        <WorksExamples>\n                            {\n                                workExamples.map((e, i) => {\n                                    return <ExampleOfWork key={i}\n                                                          previewImage={e.previewImage}\n                                                          projectName={e.projectName}\n                                                          projectDescription={e.projectDescription}\n                                                          gitHubURL={e.gitHubURL}/>\n                                })\n                            }\n                        </WorksExamples>\n                    </MyWorksContainer>\n                    <ContactsContainer ref={contactsRef}>\n                        <Flip direction={\"horizontal\"}>\n                        <Typography fontFamily={\"inherit\"} variant={\"h3\"}>Contacts</Typography>\n                        </Flip>\n                        <RootPaperContactsContainer elevation={5}>\n                            <Grid item>\n                                <Fade direction={\"left\"}>\n                                    <Typography variant={'h2'} fontFamily={\"inherit\"} fontWeight={\"bold\"}>Let's discuss\n                                        your\n                                        offer</Typography>\n                                    <Grid item>\n                                        <PhoneCallbackOutlinedIcon fontSize={\"medium\"}/>\n                                        <h4 style={{margin: '0 0 0 10px', fontSize: 'large'}}>+44 1632 967704</h4>\n                                    </Grid>\n                                    <Grid item display={\"flex\"} flexDirection={\"row\"} alignItems={\"center\"}>\n                                        <EmailOutlinedIcon fontSize={\"medium\"}/>\n                                        <h4 style={{margin: '0 0 0 10px', fontSize: 'large'}}>your@gmail.com</h4>\n                                    </Grid>\n                                    <Grid item display={\"flex\"} flexDirection={\"row\"} alignItems={\"center\"}>\n                                        <LocationOnOutlinedIcon fontSize={\"medium\"}/>\n                                        <h4 style={{margin: '0 0 0 10px', fontSize: 'large'}}>Brest, Belarus</h4>\n                                    </Grid>\n\n                                    <SocialContactsContainer>\n                                        <IconButton aria-label=\"LinkedIn\">\n                                            <LinkedInIcon style={{color: '#2867B2'}} fontSize={\"large\"}/>\n                                        </IconButton>\n                                        <IconButton aria-label=\"GitHub\">\n                                            <GitHubIcon style={isDarkMode ? {color: '#e8eaea'} : {color: '#171515'}}\n                                                        fontSize={\"large\"}/>\n                                        </IconButton>\n                                        <IconButton aria-label=\"Instagram\">\n                                            <InstagramIcon style={{color: '#bc2a8d'}} fontSize={\"large\"}/>\n                                        </IconButton>\n                                    </SocialContactsContainer>\n\n                                    <Grid item display={\"flex\"} flexDirection={\"row\"} alignItems={\"center\"}>\n                                        <CheckIcon style={{margin: '0 20px 0 50px'}} color={\"success\"}\n                                                   fontSize={\"large\"}/>\n                                        <h3>Also i am considering the option of remote work</h3>\n                                    </Grid>\n                                </Fade>\n                            </Grid>\n                            <Grid container>\n                                <ContactsForm/>\n                            </Grid>\n                        </RootPaperContactsContainer>\n                    </ContactsContainer>\n                    <FooterContainer>\n                        <Typography variant={\"h6\"}>Aleksandr Demidovich</Typography>\n                        <Typography variant={\"subtitle2\"} display={\"flex\"} alignItems={\"center\"}>\n                            <CopyrightIcon fontSize={\"small\"}/>\n                            All rights reserved\n                        </Typography>\n                    </FooterContainer>\n                </RootContentContainer>\n                <ModeButton aria-label=\"Switcher Mode\" size={\"large\"} onClick={() => setDarkMode(!isDarkMode)}>\n                    {isDarkMode\n                        ? <Tooltip title={'Switch to light mode'} placement={\"top-end\"}>\n                            <LightModeIcon color={\"warning\"}/>\n                        </Tooltip>\n                        : <Tooltip title={'Switch to dark mode'} placement={\"top-end\"}>\n                            <DarkModeIcon/>\n                        </Tooltip>}\n                </ModeButton>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n\nconst lightTheme = createTheme({\n    palette: {\n        mode: 'light',\n        primary: {\n            main: '#90caf9',\n        },\n        secondary: {\n            main: '#ce93d8',\n        },\n    },\n});\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        primary: {\n            main: '#3f51b5',\n        },\n        secondary: {\n            main: '#f50057',\n        },\n    } as PaletteOptions,\n});\n\nconst RootContentContainer = styled(Grid)`\n  width: 75%;\n  margin: auto;\n\n  @media (max-width: 768px) {\n    width: 95%;;\n  }\n`\nconst HeaderButtonContainer = styled(Grid)`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  flex-wrap: nowrap;\n\n   .MuiButton-root {\n    color: white;\n    background: none;\n\n     :hover{\n      transform: translateY(-5px);\n      color: #ce93d8;\n    }\n  }\n\n  @media (max-width: 768px) {\n    justify-content: space-around;\n  }\n`\nconst CustomToolbar = styled(Toolbar)`\n  width: 75%;\n  margin: auto;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n\n  @media (max-width: 768px) {\n    width: 95%;\n    justify-content: center;\n  }\n`\nconst MyInfoContainer = styled(Grid)`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n\n  //.MuiTypography-h3 {\n  //  font-size: 48px;\n  //  font-weight: 400;\n  //}\n\n  .MuiGrid-item div {\n    flex-direction: column;\n    flex-wrap: wrap;\n    align-content: flex-start;\n    justify-content: space-between;\n    align-items: flex-start;\n    padding: 0;\n    margin: 0;\n  }\n\n  .MuiGrid-item div h1 {\n    width: auto;\n  }\n\n  @media (max-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    text-align: center;\n    justify-content: space-around;\n    overflow-x: hidden;\n    padding-top: 15%;\n    .MuiAvatar-root {\n      margin-top: 50px;\n    }\n\n  ;\n    h2 {\n      font-size: 1rem;\n    }\n  }\n`\nconst CustomAvatar = styled(Avatar)`\n  width: 350px;\n  height: 350px;\n  border: 1px solid gray;\n\n  @media (max-width: 768px) {\n    width: 250px;\n    height: 250px;\n  }\n`\nconst SkillsContainer = styled(Grid)`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: center;\n  overflow-x: hidden;\n  vertical-align: center;\n\n  @media (max-width: 768px) {\n    display: flex;\n    justify-content: flex-start;\n    height: 100%;\n  }\n`\nconst Skills = styled(Grid)`\n  width: 100%;\n  display: flex;\n  margin-top: 30px;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`\nconst MyWorksContainer = styled(Grid)`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex-wrap: nowrap;\n  align-items: center;\n  text-align: center;\n\n  @media (max-width: 768px) {\n    height: 100%;\n  }\n`\nconst WorksExamples = styled(Grid)`\n  width: 100%;\n  margin-top: 30px;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n\n`\nconst ContactsContainer = styled(Grid)`\n  width: 100%;\n  display: flex;\n  height: 100vh;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  justify-content: center;\n  align-items: center;\n\n\n  .MuiButton-root {\n    margin-top: 20px;\n    color: white;\n    margin-left: auto;\n  }\n\n  .MuiGrid-container {\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n    flex-wrap: nowrap;\n    align-items: center;\n    padding-bottom: 30px;\n\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    .MuiPaper-root {\n      flex-direction: column;\n    }\n\n\n    .MuiGrid-container {\n      width: 100%;\n    }\n  }\n`\nconst RootPaperContactsContainer = styled(Paper)`\n  width: 100%;\n  padding: 30px;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  margin-top: 30px;\n\n  .MuiGrid-item {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n\n    .MuiGrid-item {\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n    }\n  }\n\n  @media (max-width: 768px) {\n    .MuiPaper-root {\n      flex-direction: column;\n    }\n\n  ,\n  }\n`\nconst FooterContainer = styled(Grid)`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  align-items: center;\n\n\n  .MuiTypography-h4 {\n    font-size: 1.5rem;\n  }\n`\nconst SocialContactsContainer = styled(Grid)`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: center;\n  align-items: center;\n\n  .MuiIconButton-root { \n    :hover {\n      transform: translateY(-10px);\n    }\n  }\n\n  @media (max-width: 768px) {\n    justify-content: space-around;\n  }\n`\nconst ModeButton = styled(IconButton)`\n  position: sticky;\n  bottom: 10px;\n  right: 0;\n`\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}